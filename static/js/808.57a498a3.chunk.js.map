{"version":3,"file":"static/js/808.57a498a3.chunk.js","mappings":"2NACA,EAAuB,0BAAvB,EAAuD,yBAAvD,EAA8F,iC,SCsD9F,EAlDoB,WAChB,OAAsCA,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QAQR,IANAE,EAAAA,EAAAA,YAAU,WACNC,EAAAA,GAAoBH,GACfI,MAAK,SAAAC,GAAI,OAAIN,EAAeM,EAAnB,IACTC,MAAMC,QAAQC,IACtB,GAAE,CAACR,IAECF,EAIL,OACI,8BACKA,EAAYW,OAAS,GAClB,wBACKX,EACIY,MAAM,EAAG,IACTC,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAMC,EAAb,EAAaA,UAAWC,EAAxB,EAAwBA,aAAxB,OACD,gBAAaC,UAAWC,EAAxB,UACKF,GACG,gBAAKG,IAAG,yCAAoCH,GACxCI,IAAKN,EACLG,UAAWC,EACXG,MAAM,SAGV,gBAAKJ,UAAWC,EAAhB,8BAEJ,4BACI,wBACI,uBAAIJ,OAER,wCACe,uBAAIC,YAflBF,EADR,OAuBT,yCAKnB,C,+LCnDKS,EAAM,mCACNC,EAAW,gCAEJC,EAAiB,mCAAG,oGACNC,EAAAA,EAAAA,IAAA,UAChBF,EADgB,qCACqBD,IAFf,cACvBI,EADuB,yBAItBA,EAASpB,MAJa,2CAAH,qDAOjBqB,EAAe,mCAAG,WAAMC,GAAN,uFACJH,EAAAA,EAAAA,IAAA,UAChBF,EADgB,gCACgBD,EADhB,kBAC6BM,EAD7B,+CADI,cACrBF,EADqB,yBAIpBA,EAASpB,MAJW,2CAAH,sDAOfuB,EAAY,mCAAG,WAAMhB,GAAN,uFACDY,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCV,EADD,oBACeS,EADf,oBADC,cAClBI,EADkB,yBAIjBA,EAASpB,MAJQ,2CAAH,sDAOZwB,EAAe,mCAAG,WAAMjB,GAAN,uFACJY,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCV,EADD,4BACuBS,EADvB,oBADI,cACrBI,EADqB,yBAIpBA,EAASpB,KAAKyB,SAJM,2CAAH,sDAOfC,EAAe,mCAAG,WAAMnB,GAAN,uFACJY,EAAAA,EAAAA,IAAA,UAChBF,EADgB,iBACCV,EADD,4BACuBS,EADvB,2BADI,cACrBI,EADqB,yBAIpBA,EAASpB,KAAK2B,SAJM,2CAAH,qD","sources":["webpack://react-homework-template/./src/pages/CreditMovie/CreditMovie.module.scss?c385","pages/CreditMovie/CreditMovie.jsx","services/fetchMoviesApi.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"CreditMovie_item__4j8Mx\",\"img\":\"CreditMovie_img__CLvRi\",\"imgNotFound\":\"CreditMovie_imgNotFound__jBtxZ\"};","import { useState, useEffect } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport * as API from '../../services/fetchMoviesApi';\nimport styles from './CreditMovie.module.scss';\n\nconst CreditMovie = () => { \n    const [creditMovie, setCreditMovie] = useState(null);\n    const { movieId } = useParams();\n\n    useEffect(() => {\n        API.getMovieCredits(movieId)\n            .then(data => setCreditMovie(data))\n            .catch(console.log);\n    }, [movieId]);\n\n    if (!creditMovie) { \n        return;\n    }\n\n    return (\n        <>\n            {creditMovie.lenght > 0 ? (\n                <ul>\n                    {creditMovie\n                        .slice(0, 19)\n                        .map(({ id, name, character, profile_path }) => (\n                            <li key={id} className={styles.item}>\n                                {profile_path ? (\n                                    <img src={`https://image.tmdb.org/t/p/w500${profile_path}`}\n                                        alt={name}\n                                        className={styles.img}\n                                        width=\"100\"\n                                    />\n                                ) : (\n                                    <div className={styles.imgNotFound}>Image not found</div>\n                                )}\n                                <div>\n                                    <p>\n                                        <b>{name}</b>\n                                    </p>\n                                    <p>\n                                        Character: <b>{character}</b>\n                                    </p>\n                                </div>\n                            </li>\n                        ))}\n                </ul>\n            ) : (\n                    <div>No credits</div>\n        )} \n        </>\n\n    );\n};\n\nexport default CreditMovie;","import axios from 'axios'\n\nconst KEY = '8f097ac1772f5d24a794202a251ed2ca';\nconst BASE_URL = 'https://api.themoviedb.org/3/';\n\nexport const getTrandingMovies = async () => { \n    const response = await axios.get(\n        `${BASE_URL}/trending/all/day?api_key=${KEY}`\n    );\n    return response.data;\n};\n\nexport const getMoviesQuerry = async query => { \n    const response = await axios.get(\n        `${BASE_URL}search/movie?api_key=${KEY}&query=${query}&language=en-US&page=1&include_adult=false`\n    );\n    return response.data;\n};\n\nexport const getMovieById = async id => { \n    const response = await axios.get(\n        `${BASE_URL}movie/${id}?api_key=${KEY}&language=en-US`\n    );\n    return response.data;\n};\n\nexport const getMovieCredits = async id => { \n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/credits?api_key=${KEY}&language=en-US`\n    );\n    return response.data.credits;\n};\n\nexport const getMovieReviews = async id => { \n    const response = await axios.get(\n        `${BASE_URL}movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n    );\n    return response.data.results;\n};"],"names":["useState","creditMovie","setCreditMovie","movieId","useParams","useEffect","API","then","data","catch","console","log","lenght","slice","map","id","name","character","profile_path","className","styles","src","alt","width","KEY","BASE_URL","getTrandingMovies","axios","response","getMoviesQuerry","query","getMovieById","getMovieCredits","credits","getMovieReviews","results"],"sourceRoot":""}